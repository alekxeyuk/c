name: Build and Package C Programs

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-linux:
    name: Build Linux Binaries and Package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up build directory
        run: mkdir -p build/linux

      - name: Compile all .c files for Linux
        run: |
          # Find all C source files (change "Eltex" if necessary)
          for src in $(find . -type f -name "*.c"); do
              # remove "./" prefix and directory separators for output executable name
              exe=$(echo "$src" | sed 's#^\./##; s#[/\\]#_#g; s/\.c$//')
              echo "Compiling $src to build/linux/${exe}"
              gcc "$src" -o "build/linux/${exe}" || { echo "Compilation failed for $src"; exit 1; }
          done

      - name: Archive Linux binaries
        run: |
          cd build/linux
          zip -r ../../linux.zip *
  
  build-windows:
    name: Build Windows Binaries and Package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install mingw
        run: sudo apt-get update && sudo apt-get install -y mingw-w64 zip

      - name: Set up build directory
        run: mkdir -p build/windows

      - name: Compile all .c files for Windows
        run: |
          # Find all C source files (change "Eltex" if necessary)
          for src in $(find . -type f -name "*.c"); do
              # remove "./" prefix and directory separators for output exe name
              exe=$(echo "$src" | sed 's#^\./##; s#[/\\]#_#g; s/\.c$//').exe
              echo "Compiling $src to build/windows/${exe}"
              x86_64-w64-mingw32-gcc "$src" -o "build/windows/${exe}" || { echo "Compilation failed for $src"; exit 1; }
          done

      - name: Archive Windows binaries
        run: |
          cd build/windows
          zip -r ../../windows.zip *
